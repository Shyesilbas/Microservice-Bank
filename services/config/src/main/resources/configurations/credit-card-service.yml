server:
  port: 8040

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/creditCard
    username: postgres
    password: 1234

  jpa:
    hibernate:
      ddl-auto: update




springdoc:
  swagger-ui:
    path: /swagger-ui.html

  api-docs:
    path: /api-docs


management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: circuitbreakers,health
  endpoint:
    health:
      show-details: always

resilience4j:
  circuitbreaker:
    instances:
      accountServiceFindAccountsCircuitBreaker:  # Circuit breaker örneği
        registerHealthIndicator: true  # Sağlık göstergesi kaydetsin mi?
        slidingWindowSize: 10           # Son 10 çağrıyı dikkate al
        failureRateThreshold: 50        # Hata oranı %50'yi geçerse devreyi aç
        waitDurationInOpenState: 10000  # Açık durumda 10 saniye beklesin
        permittedNumberOfCallsInHalfOpenState: 3  # Yarı açık durumda 3 çağrıya izin ver
        minimumNumberOfCalls: 5  # Hata oranı hesaplamak için en az 5 çağrı yapılmalı

      accountServiceUpdateLinkedCreditCardsCircuitBreaker:
        registerHealthIndicator: true  # Sağlık göstergesi kaydetsin mi?
        slidingWindowSize: 10           # Son 10 çağrıyı dikkate al
        failureRateThreshold: 50        # Hata oranı %50'yi geçerse devreyi aç
        waitDurationInOpenState: 10000  # Açık durumda 10 saniye beklesin
        permittedNumberOfCallsInHalfOpenState: 3  # Yarı açık durumda 3 çağrıya izin ver
        minimumNumberOfCalls: 5

      customerServiceFindCustomer:
        registerHealthIndicator: true  # Sağlık göstergesi kaydetsin mi?
        slidingWindowSize: 10           # Son 10 çağrıyı dikkate al
        failureRateThreshold: 50        # Hata oranı %50'yi geçerse devreyi aç
        waitDurationInOpenState: 10000  # Açık durumda 10 saniye beklesin
        permittedNumberOfCallsInHalfOpenState: 3  # Yarı açık durumda 3 çağrıya izin ver
        minimumNumberOfCalls: 5

      customerServiceUpdateLinkedCreditCardsForCustomer:
        registerHealthIndicator: true  # Sağlık göstergesi kaydetsin mi?
        slidingWindowSize: 10           # Son 10 çağrıyı dikkate al
        failureRateThreshold: 50        # Hata oranı %50'yi geçerse devreyi aç
        waitDurationInOpenState: 10000  # Açık durumda 10 saniye beklesin
        permittedNumberOfCallsInHalfOpenState: 3  # Yarı açık durumda 3 çağrıya izin ver
        minimumNumberOfCalls: 5


  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      group-id: card-service-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "com.serhat.creditcard.kafka"
            value:
              default.type: "*"
